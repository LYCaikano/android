name: Build LineageOS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    # 1. 检出代码
    - name: Checkout source code
      uses: actions/checkout@v2

    # 2. 设置构建环境
    - name: Set up dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y \
          curl \
          git \
          openjdk-8-jdk \
          python3 \
          python3-pip \
          unzip \
          zip \
          libncurses5-dev:i386 \
          lib32z1 \
          lib32stdc++6 \
          gcc-multilib \
          g++-multilib \
          build-essential \
          repo

    # 3. 安装 repo 工具（如果未预安装）
    - name: Install repo
      run: |
        mkdir -p ~/.bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
        chmod a+rx ~/.bin/repo
        echo 'export PATH=~/.bin:$PATH' >> ~/.bashrc
        export PATH=~/.bin:$PATH

    # 4. 初始化和同步 LineageOS 源码
    - name: Initialize LineageOS repo
      run: |
        mkdir -p ~/android/lineage
        cd ~/android/lineage
        repo init -u https://github.com/LineageOS/android.git -b lineage-20.0
        repo sync --force-sync --no-clone-bundle --no-tags -j$(nproc)

    # 5. 克隆设备相关的代码仓库（以 Redmi K30 Pro 为例）
    - name: Clone device-specific repos
      run: |
        cd ~/android/lineage
        git clone https://github.com/LineageOS/android_device_xiaomi_lmi device/xiaomi/lmi
        git clone https://github.com/LineageOS/android_kernel_xiaomi_lmi kernel/xiaomi/lmi
        git clone https://github.com/LineageOS/android_vendor_xiaomi_lmi vendor/xiaomi/lmi

    # 6. 设置环境并开始构建
    - name: Build LineageOS
      run: |
        cd ~/android/lineage
        source build/envsetup.sh
        lunch lineage_lmi-userdebug
        mka bacon

    # 7. 保存输出文件
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: LineageOS
        path: ~/android/lineage/out/target/product/lmi/*.zip
